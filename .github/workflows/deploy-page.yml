name: GitHub Actions Build and Deploy Page
on:
  push:
    branches:
      - dev
env:
  APP_NAME: vmgc
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: project
        uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
  
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org"
      - run: npm i -g yarn pnpm

      #- name: Build Page
      #  run: |
      #    echo ${{ steps.project.outputs }}
      #    rm -rf node_modules && yarn install
      #    yarn build:page
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        #uses: actions/upload-artifact@v3
        with:
          # Upload entire repository
          path: "./dist"
          

  # Deployment job
  electron:
    environment:
      name: github-pages
      url: ${{ steps.electron.outputs.page_url }}
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest] #windows-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: cd ../
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          path: ../
      
      - name: Build Macos and Linux
        if: runner.os == 'Linux' || runner.os == 'macos'
        run: |
          cd ../
          cp -r ${{ env.APP_NAME }} project
          mv -f ./github-pages ./app
          cp ./project/build/electron/package.json ./
          mkdir ./app/electron
          cp -f ./project/build/electron/*.js ./app/electron
          cd ./app
          tar -xf artifact.tar && rm -rf artifact.tar
          cd ../
          pwd
          yarn install
          yarn build
          ls
          cd build-app && ls
          cd ../
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        #uses: actions/upload-artifact@v3
        with:
          # Upload entire repository
          name: ${{ runner.os }}
          path: "./build-app"

      - name: Build Windows
        if: runner.os == 'windows'
        run: |
          cd ../
          xcopy ${{ env.APP_NAME }} project /E/I
          move github-pages app
          copy project\build\electron\package.json .
          mkdir app\electron
          copy project\build\electron\*.js app\electron
          cd app
          tar -xf artifact.tar && del artifact.tar
          cd ..
          pwd
          yarn install
          yarn build
          ls
          cd build-app && ls       

      - name: End
        id: electron
        run: |
          echo "end"


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2


